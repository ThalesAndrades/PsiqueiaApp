#!/usr/bin/env node

/**
 * Script para validar configura√ß√µes do Xcode Cloud
 */

const fs = require('fs');

console.log('üîç VALIDANDO CONFIGURA√á√ïES DO XCODE CLOUD');
console.log('=' .repeat(45));

// Verificar arquivo .xcode-cloud.yml
const xcodeCloudFile = '.xcode-cloud.yml';
if (fs.existsSync(xcodeCloudFile)) {
    console.log('‚úÖ Arquivo .xcode-cloud.yml encontrado');
    
    const content = fs.readFileSync(xcodeCloudFile, 'utf8');
    
    // Verifica√ß√µes b√°sicas
    const checks = [
        { name: 'Version definida', test: content.includes('version:') },
        { name: 'Workflow configurado', test: content.includes('workflows:') },
        { name: 'Environment definido', test: content.includes('environment:') },
        { name: 'Steps configurados', test: content.includes('steps:') },
        { name: 'Deploy configurado', test: content.includes('deploy:') }
    ];
    
    checks.forEach(check => {
        console.log(check.test ? '‚úÖ' : '‚ùå', check.name);
    });
} else {
    console.log('‚ùå Arquivo .xcode-cloud.yml n√£o encontrado');
}

// Verificar chave privada
const privateKeyPath = 'private_keys/AuthKey_5D79LKKR26.p8';
if (fs.existsSync(privateKeyPath)) {
    console.log('‚úÖ Chave privada encontrada');
} else {
    console.log('‚ùå Chave privada n√£o encontrada em:', privateKeyPath);
}

// Verificar app.json
const appJsonPath = 'app.json';
if (fs.existsSync(appJsonPath)) {
    console.log('‚úÖ app.json encontrado');
    
    try {
        const appJson = JSON.parse(fs.readFileSync(appJsonPath, 'utf8'));
        const expo = appJson.expo;
        
        if (expo.ios && expo.ios.bundleIdentifier) {
            console.log('‚úÖ Bundle ID configurado:', expo.ios.bundleIdentifier);
        } else {
            console.log('‚ùå Bundle ID n√£o configurado');
        }
        
        if (expo.version) {
            console.log('‚úÖ Vers√£o configurada:', expo.version);
        } else {
            console.log('‚ùå Vers√£o n√£o configurada');
        }
    } catch (error) {
        console.log('‚ùå Erro ao ler app.json:', error.message);
    }
} else {
    console.log('‚ùå app.json n√£o encontrado');
}

console.log('\nüìã PR√ìXIMOS PASSOS:');
console.log('1. Configure as vari√°veis de ambiente no App Store Connect');
console.log('2. Fa√ßa upload da chave privada');
console.log('3. Execute um build de teste');
console.log('4. Monitore os logs no Xcode Cloud');

console.log('\nüìñ Consulte: xcode-cloud-configs/SETUP_INSTRUCTIONS.md');
